    // #load rf default register
    // #5F00EFAE-->5F00EFCE RXAGC=ON
    // w cb110000 5F00EFCE
    _cabrio_write_reg(0xCB110000, 0x5F00EFCE);
    // w cb110004 00001FC0
    _cabrio_write_reg(0xCB110004, 0x00001FC0);
    // w cb110008 1C96CA3A
    _cabrio_write_reg(0xCB110008, 0x1C96CA3A);
    // w cb11000c 15155A74
    _cabrio_write_reg(0xCB11000C, 0x15155A74);
    // w cb110010 01011A88
    _cabrio_write_reg(0xCB110010, 0x01011A88);
    // w cb110014 3CBF703C
    _cabrio_write_reg(0xCB110014, 0x3CBF703C);
    // w cb110018 00057579
    _cabrio_write_reg(0xCB110018, 0x00057579);
    // w cb11001c 000103A7
    _cabrio_write_reg(0xCB11001C, 0x000103A7);
    // w cb110020 000103A6
    _cabrio_write_reg(0xCB110020, 0x000103A6);
    // w cb110024 00012001
    _cabrio_write_reg(0xCB110024, 0x00012001);
    // w cb110028 00036000
    _cabrio_write_reg(0xCB110028, 0x00036000);
    // w cb11002c 00000CA8
    _cabrio_write_reg(0xCB11002C, 0x00000CA8);
    // w cb110030 002A0224
    _cabrio_write_reg(0xCB110030, 0x002A0224);
    // w cb110034 00001E55
    _cabrio_write_reg(0xCB110034, 0x00001E55);
    // w cb110038 00007C7C
    _cabrio_write_reg(0xCB110038, 0x00007C7C);
    // w cb11003c 55666666
    _cabrio_write_reg(0xCB11003C, 0x55666666);
    // w cb110040 005508F8
    _cabrio_write_reg(0xCB110040, 0x005508F8);
    // w cb110044 07C08BFF
    _cabrio_write_reg(0xCB110044, 0x07C08BFF);
    // w cb110048 F1111A27
    _cabrio_write_reg(0xCB110048, 0xF1111A27);
    // w cb11004c 2773F53C
    _cabrio_write_reg(0xCB11004C, 0x2773F53C);
    // w cb110050 00000A7C
    _cabrio_write_reg(0xCB110050, 0x00000A7C);
    // w cb110054 00087FF8
    _cabrio_write_reg(0xCB110054, 0x00087FF8);
    // w cb110058 00103014
    _cabrio_write_reg(0xCB110058, 0x00103014);
    // w cb11005c 0000848A
    _cabrio_write_reg(0xCB11005C, 0x0000848A);
    // w cb110060 00406030
    _cabrio_write_reg(0xCB110060, 0x00406030);
    // w cb110064 00820820
    _cabrio_write_reg(0xCB110064, 0x00820820);
    // w cb110068 00820820
    _cabrio_write_reg(0xCB110068, 0x00820820);
    // w cb11006c 00820820
    _cabrio_write_reg(0xCB11006C, 0x00820820);
    // w cb110070 00820820
    _cabrio_write_reg(0xCB110070, 0x00820820);
    // w cb110074 00820820
    _cabrio_write_reg(0xCB110074, 0x00820820);
    // w cb110078 00820820
    _cabrio_write_reg(0xCB110078, 0x00820820);
    // w cb11007c 00820820
    _cabrio_write_reg(0xCB11007C, 0x00820820);
    // w cb110080 00820820
    _cabrio_write_reg(0xCB110080, 0x00820820);
    // w cb110084 00004080
    _cabrio_write_reg(0xCB110084, 0x00004080);
    // w cb110088 00003EAA
    _cabrio_write_reg(0xCB110088, 0x00003EAA);
    // w cb11008c 5E00FFEB
    _cabrio_write_reg(0xCB11008C, 0x5E00FFEB);
    // w cb110090 AAAAAAAA
    _cabrio_write_reg(0xCB110090, 0xAAAAAAAA);
    // w cb110094 0000243F
    _cabrio_write_reg(0xCB110094, 0x0000243F);
    // w cb110098 00018B10
    _cabrio_write_reg(0xCB110098, 0x00018B10);
    // w cb120080 00000000
    _cabrio_write_reg(0xCB120080, 0x00000000);
    // w cb120084 00000000
    _cabrio_write_reg(0xCB120084, 0x00000000);
    // w cb120088 00000000
    _cabrio_write_reg(0xCB120088, 0x00000000);
    // w cb120090 00000813
    _cabrio_write_reg(0xCB120090, 0x00000813);
    // w cb120094 00000000
    _cabrio_write_reg(0xCB120094, 0x00000000);
    // w cb1203f8 FF000000
    _cabrio_write_reg(0xCB1203F8, 0xFF000000);
    // # Switch clock to PLL output of RF
    // w c0000018 3
    _cabrio_write_reg(0xC0000018, 0x00000003);
    // 
    // # Load image file to SRAM
    // load bin F:\test\test\soc\image\ssv6200-uart.bin
    _cabrio_load_fw("F:\test\test\soc\image\ssv6200-uart.bin");
    // 
    // soc script enable
    // 
    // # Wireless STA Configuration
    // soc set STA-OPMODE          STA
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000022, cmd_data, 4);
    }
    // soc set STA-BSSID           00:00:00:00:00:00
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000009, cmd_data, 8);
    }
    // soc set STA-MAC             D0:DF:9A:97:AB:BA
    {
    const unsigned char cmd_data[] = {
        0xD0, 0xDF, 0x9A, 0x97, 0x55, 0x66, 0x00, 0x00};
    _command_Cabrio(0x00000008, cmd_data, 8);
    }
    // soc set STA-WSID[0]         { disable }
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000B, cmd_data, 48);
    }
    // soc set STA-WSID[1]         { disable }
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000B, cmd_data, 48);
    }
    // soc set STA-WSID[2]         { disable }
    {
    const unsigned char cmd_data[] = {
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000B, cmd_data, 48);
    }
    // soc set STA-WSID[3]         { disable }
    {
    const unsigned char cmd_data[] = {
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000B, cmd_data, 48);
    }
    // soc set TX-ETHER-TRAP[0]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000C, cmd_data, 8);
    }
    // soc set TX-ETHER-TRAP[1]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000C, cmd_data, 8);
    }
    // soc set TX-ETHER-TRAP[2]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000C, cmd_data, 8);
    }
    // soc set TX-ETHER-TRAP[3]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000C, cmd_data, 8);
    }
    // soc set RX-ETHER-TRAP[0]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000D, cmd_data, 8);
    }
    // soc set RX-ETHER-TRAP[1]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000D, cmd_data, 8);
    }
    // soc set RX-ETHER-TRAP[2]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000D, cmd_data, 8);
    }
    // soc set RX-ETHER-TRAP[3]    0x0000
    {
    const unsigned char cmd_data[] = {
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000D, cmd_data, 8);
    }
    // 
    // 
    // soc set TX-FLOW-DATA        { M_ENG_HWHCI M_ENG_MIC M_ENG_FRAG M_ENG_ENCRYPT M_CPU_EDCATX M_ENG_TX_EDCA0 M_ENG_CPU M_ENG_CPU }
    {
    const unsigned char cmd_data[] = {
        0x51, 0x32, 0x60, 0x00, 0x00, 0x00, 0x04, 0x00};
    _command_Cabrio(0x0000000E, cmd_data, 8);
    }
    // soc set TX-FLOW-MGMT        { M_ENG_HWHCI M_ENG_FRAG M_ENG_ENCRYPT M_ENG_TX_EDCA0 }
    {
    const unsigned char cmd_data[] = {
        0x21, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000000F, cmd_data, 8);
    }
    // soc set TX-FLOW-CTRL        { M_ENG_HWHCI M_ENG_TX_EDCA0 M_ENG_CPU M_ENG_CPU }
    {
    const unsigned char cmd_data[] = {
        0x61, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000010, cmd_data, 4);
    }
    // soc set RX-FLOW-DATA        { M_ENG_MACRX M_ENG_ENCRYPT M_CPU_DEFRAG M_ENG_MIC M_ENG_HWHCI M_ENG_CPU M_ENG_CPU M_ENG_CPU }
    {
    const unsigned char cmd_data[] = {
        0x34, 0x50, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00};
    _command_Cabrio(0x00000011, cmd_data, 8);
    }
    // soc set RX-FLOW-MGMT        { M_ENG_MACRX M_CPU_RXMGMT M_ENG_CPU M_ENG_CPU }
    {
    const unsigned char cmd_data[] = {
        0x04, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000012, cmd_data, 8);
    }
    // soc set RX-FLOW-CTRL        { M_ENG_MACRX M_ENG_CPU M_ENG_CPU M_ENG_CPU }
    {
    const unsigned char cmd_data[] = {
        0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000013, cmd_data, 8);
    }
    // 
    // soc set HW-DUP-FILTER       disable
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000002F, cmd_data, 4);
    }
    // soc set PKTRX-OFFSET        80
    {
    const unsigned char cmd_data[] = {
        0x50, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000002E, cmd_data, 4);
    }
    // soc set PROMIS-MODE         disable
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000031, cmd_data, 4);
    }
    // 
    // soc set STA-QOS-CAP         disable
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000032, cmd_data, 4);
    }
    // soc set HT-MODE             Non-HT
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000030, cmd_data, 4);
    }
    // 
    // soc set STA-SIFS            10
    {
    const unsigned char cmd_data[] = {
        0x0A, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000014, cmd_data, 4);
    }
    // soc set STA-DIFS            20
    {
    const unsigned char cmd_data[] = {
        0x14, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000015, cmd_data, 4);
    }
    // soc set STA-EIFS            30
    {
    const unsigned char cmd_data[] = {
        0x1E, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000016, cmd_data, 4);
    }
    // soc set STA-NAV             0
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000023, cmd_data, 4);
    }
    // soc set HDR-STRIP-OFF       enable
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000026, cmd_data, 4);
    }
    // soc set HCI-RX2HOST         enable
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000024, cmd_data, 4);
    }
    // soc set REASON-TRAP         { 0x7fffffff 0xffffffff }
    {
    const unsigned char cmd_data[] = {
        0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF};
    _command_Cabrio(0x00000027, cmd_data, 8);
    }
    // soc set SEQNO-CTRL          0
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000028, cmd_data, 4);
    }
    // 
    // 
    // soc set AUTO-SEQNO          enable
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000029, cmd_data, 4);
    }
    // soc set ERP-PROTECT					disable
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x0000002D, cmd_data, 4);
    }
    // 
    // 
    // soc set STA-MCFILTER[0]     { disable 00:11:11:11:11:11 00:00:00:00:00:00 }
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000033, cmd_data, 20);
    }
    // soc set STA-MCFILTER[1]     { disable 00:22:22:22:22:22 ff:ff:ff:ff:ff:ff }
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF};
    _command_Cabrio(0x00000033, cmd_data, 20);
    }
    // soc set STA-MCFILTER[2]     { disable 00:33:33:33:33:33 ff:ff:ff:ff:ff:ff }
    {
    const unsigned char cmd_data[] = {
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF};
    _command_Cabrio(0x00000033, cmd_data, 20);
    }
    // soc set STA-MCFILTER[3]     { disable 00:44:44:44:44:44 aa:aa:aa:aa:aa:aa }
    {
    const unsigned char cmd_data[] = {
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA,
        0xAA, 0xAA, 0xAA, 0xAA};
    _command_Cabrio(0x00000033, cmd_data, 20);
    }
    // 
    // 
    // soc set MGMT-TXQID			3
    {
    const unsigned char cmd_data[] = {
        0x03, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000034, cmd_data, 4);
    }
    // soc set NONQOS-TXQID		1
    {
    const unsigned char cmd_data[] = {
        0x01, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000035, cmd_data, 4);
    }
    // 
    // #soc set MRX-DECITBL		{ 0X3DF5 0X31F6 0X35F9 0X21C1 0X4BF9 0X4DB1 0X11FE 0X0BFE 0X0000 0X0000 0X0000 0X0006 0X0001 0X0003 0X0005 0X0007 0X2008 0X1001 0X0808 0X1040 0X2008 0X800E 0X0838 0X2088 0X0800 }
    // 
    // soc set MAC-MODE			normal
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000036, cmd_data, 4);
    }
    // 
    // soc set FRAG-THRESHOLD		2000
    {
    const unsigned char cmd_data[] = {
        0xD0, 0x07, 0x00, 0x00};
    _command_Cabrio(0x00000039, cmd_data, 4);
    }
    // 
    // #################################################
    // # Set Decision Table
    // #################################################
    // soc set MRX-DECITBL					--BEGIN--
    // 		# Decision Table
    // 		0x3df5 0x31f6 0x35f9 0x21c1 
    // 		0x4bf9 0x4db1 0x11fe 0x0bfe
    // 		0x0000 0x0000 0x0000 0x0006
    // 		0x0001 0x0003 0x0005 0x0007
    // 		
    // 		# Decision Mask Table
    // 		0x2008 0x1001 0x0808 0x1040
    // 		0x2008 0x800e 0x0838 0x2088
    // 		0x0800	
    // 
    // soc set MRX-DECITBL					--END--
    {
    const unsigned char cmd_data[] = {
        0xF5, 0x3D, 0xF6, 0x31, 0xF9, 0x35, 0xC1, 0x21,
        0xF9, 0x4B, 0xB1, 0x4D, 0xFE, 0x11, 0xFE, 0x0B,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
        0x01, 0x00, 0x03, 0x00, 0x05, 0x00, 0x07, 0x00,
        0x08, 0x20, 0x01, 0x10, 0x08, 0x08, 0x40, 0x10,
        0x08, 0x20, 0x0E, 0x80, 0x38, 0x08, 0x88, 0x20,
        0x00, 0x08, 0x00, 0x00};
    _command_Cabrio(0x0000000A, cmd_data, 52);
    }
    // 
    // 
    // #################################################
    // # Set PHY Info Table
    // #################################################
    // soc set PHY-TBL							--BEGIN--
    // 		# PHY-Info Table:
    // 		0x00000000 0x00000100 0x00000200 0x00000300
    // 		0x00000140 0x00000240 0x00000340 0x00000001
    // 		0x00000101 0x00000201 0x00000301 0x00000401
    // 		0x00000501 0x00000601 0x00000701 0x00030002
    // 		0x00030102 0x00030202 0x00030302 0x00030402
    // 		0x00030502 0x00030602 0x00030702 0x00030082
    // 		0x00030182 0x00030282 0x00030382 0x00030482
    // 		0x00030582 0x00030682 0x00030782 0x00030042
    // 		0x00030142 0x00030242 0x00030342 0x00030442
    // 		0x00030542 0x00030642 0x00030742
    // 		
    // 		# PHY-Index Table:
    // 		0x013A0000 0x01020010 0x00df0010 0x00d50010
    // 		0x00a20040 0x007f0040 0x00750040 0x003c0070
    // 		0x00340070 0x00300090 0x002c0090 0x002c00b0
    // 		0x002800b0 0x002800b0 0x002800b0 0x004c0071
    // 		0x00400093 0x003c0095 0x003c00b7 0x003800b9
    // 		0x003800bb 0x003800bb 0x003800bb 0x004c007d
    // 		0x00400093 0x003c0095 0x003c00b7 0x003800b9
    // 		0x003800bb 0x003800bb 0x003800bb 0x00400070
    // 		0x00340090 0x00300090 0x003000b0 0x002c00b0
    // 		0x002c00b0 0x002c00b0 0x002c00b0
    // 		
    // 		# L-Length Table:
    // 		0x000329a3 0x0002375a 0x0001d697 0x0001a5d7
    // 		0x000175d4 0x00017514 0x0002f9a3 0x00000000
    // 		
    // soc set PHY-TBL							--END--
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
        0x40, 0x01, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00,
        0x40, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x01, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00,
        0x01, 0x03, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00,
        0x01, 0x05, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00,
        0x01, 0x07, 0x00, 0x00, 0x02, 0x00, 0x03, 0x00,
        0x02, 0x01, 0x03, 0x00, 0x02, 0x02, 0x03, 0x00,
        0x02, 0x03, 0x03, 0x00, 0x02, 0x04, 0x03, 0x00,
        0x02, 0x05, 0x03, 0x00, 0x02, 0x06, 0x03, 0x00,
        0x02, 0x07, 0x03, 0x00, 0x82, 0x00, 0x03, 0x00,
        0x82, 0x01, 0x03, 0x00, 0x82, 0x02, 0x03, 0x00,
        0x82, 0x03, 0x03, 0x00, 0x82, 0x04, 0x03, 0x00,
        0x82, 0x05, 0x03, 0x00, 0x82, 0x06, 0x03, 0x00,
        0x82, 0x07, 0x03, 0x00, 0x42, 0x00, 0x03, 0x00,
        0x42, 0x01, 0x03, 0x00, 0x42, 0x02, 0x03, 0x00,
        0x42, 0x03, 0x03, 0x00, 0x42, 0x04, 0x03, 0x00,
        0x42, 0x05, 0x03, 0x00, 0x42, 0x06, 0x03, 0x00,
        0x42, 0x07, 0x03, 0x00, 0x00, 0x00, 0x3A, 0x01,
        0x10, 0x00, 0x02, 0x01, 0x10, 0x00, 0xDF, 0x00,
        0x10, 0x00, 0xD5, 0x00, 0x40, 0x00, 0xA2, 0x00,
        0x40, 0x00, 0x7F, 0x00, 0x40, 0x00, 0x75, 0x00,
        0x70, 0x00, 0x3C, 0x00, 0x70, 0x00, 0x34, 0x00,
        0x90, 0x00, 0x30, 0x00, 0x90, 0x00, 0x2C, 0x00,
        0xB0, 0x00, 0x2C, 0x00, 0xB0, 0x00, 0x28, 0x00,
        0xB0, 0x00, 0x28, 0x00, 0xB0, 0x00, 0x28, 0x00,
        0x71, 0x00, 0x4C, 0x00, 0x93, 0x00, 0x40, 0x00,
        0x95, 0x00, 0x3C, 0x00, 0xB7, 0x00, 0x3C, 0x00,
        0xB9, 0x00, 0x38, 0x00, 0xBB, 0x00, 0x38, 0x00,
        0xBB, 0x00, 0x38, 0x00, 0xBB, 0x00, 0x38, 0x00,
        0x7D, 0x00, 0x4C, 0x00, 0x93, 0x00, 0x40, 0x00,
        0x95, 0x00, 0x3C, 0x00, 0xB7, 0x00, 0x3C, 0x00,
        0xB9, 0x00, 0x38, 0x00, 0xBB, 0x00, 0x38, 0x00,
        0xBB, 0x00, 0x38, 0x00, 0xBB, 0x00, 0x38, 0x00,
        0x70, 0x00, 0x40, 0x00, 0x90, 0x00, 0x34, 0x00,
        0x90, 0x00, 0x30, 0x00, 0xB0, 0x00, 0x30, 0x00,
        0xB0, 0x00, 0x2C, 0x00, 0xB0, 0x00, 0x2C, 0x00,
        0xB0, 0x00, 0x2C, 0x00, 0xB0, 0x00, 0x2C, 0x00,
        0xA3, 0x29, 0x03, 0x00, 0x5A, 0x37, 0x02, 0x00,
        0x97, 0xD6, 0x01, 0x00, 0xD7, 0xA5, 0x01, 0x00,
        0xD4, 0x75, 0x01, 0x00, 0x14, 0x75, 0x01, 0x00,
        0xA3, 0xF9, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000041, cmd_data, 344);
    }
    // 
    // 
    // # MIB counter enable                              
    // soc reg w 0xca000800 0xffffffff
    {
    const unsigned char cmd_data[] = {
        0x00, 0x08, 0x00, 0xCA, 0xFF, 0xFF, 0xFF, 0xFF};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // 
    // #################################################
    // # Set PHY Registers
    // #################################################
    // soc reg w 0xCE000000 0x8000001E
    {
    const unsigned char cmd_data[] = {
        0x00, 0x00, 0x00, 0xCE, 0x1E, 0x00, 0x00, 0x80};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000004 0x00000000
    {
    const unsigned char cmd_data[] = {
        0x04, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000010 0x00007FFF
    {
    const unsigned char cmd_data[] = {
        0x10, 0x00, 0x00, 0xCE, 0xFF, 0x7F, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000018 0x0055083E
    {
    const unsigned char cmd_data[] = {
        0x18, 0x00, 0x00, 0xCE, 0x3E, 0x08, 0x55, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00001C 0x00000064
    {
    const unsigned char cmd_data[] = {
        0x1C, 0x00, 0x00, 0xCE, 0x64, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000020 0x20000000
    {
    const unsigned char cmd_data[] = {
        0x20, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x20};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000030 0x80046072
    {
    const unsigned char cmd_data[] = {
        0x30, 0x00, 0x00, 0xCE, 0x72, 0x60, 0x04, 0x80};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000038 0x660F36D0
    {
    const unsigned char cmd_data[] = {
        0x38, 0x00, 0x00, 0xCE, 0xD0, 0x36, 0x0F, 0x66};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00003C 0x106C0004
    {
    const unsigned char cmd_data[] = {
        0x3C, 0x00, 0x00, 0xCE, 0x04, 0x00, 0x6C, 0x10};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000040 0x01600400
    {
    const unsigned char cmd_data[] = {
        0x40, 0x00, 0x00, 0xCE, 0x00, 0x04, 0x60, 0x01};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00004C 0x00200836
    {
    const unsigned char cmd_data[] = {
        0x4C, 0x00, 0x00, 0xCE, 0x36, 0x08, 0x20, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000094 0x01018081
    {
    const unsigned char cmd_data[] = {
        0x94, 0x00, 0x00, 0xCE, 0x81, 0x80, 0x01, 0x01};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000098 0x01010101
    {
    const unsigned char cmd_data[] = {
        0x98, 0x00, 0x00, 0xCE, 0x01, 0x01, 0x01, 0x01};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0030a4 0x00002301
    {
    const unsigned char cmd_data[] = {
        0xA4, 0x30, 0x00, 0xCE, 0x01, 0x23, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE007044 0x00038080
    {
    const unsigned char cmd_data[] = {
        0x44, 0x70, 0x00, 0xCE, 0x80, 0x80, 0x03, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00007C 0x1011000F
    {
    const unsigned char cmd_data[] = {
        0x7C, 0x00, 0x00, 0xCE, 0x0F, 0x00, 0x11, 0x10};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004004 0x00750075
    {
    const unsigned char cmd_data[] = {
        0x04, 0x40, 0x00, 0xCE, 0x75, 0x00, 0x75, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004008 0x00000075
    {
    const unsigned char cmd_data[] = {
        0x08, 0x40, 0x00, 0xCE, 0x75, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00400c 0x10000075
    {
    const unsigned char cmd_data[] = {
        0x0C, 0x40, 0x00, 0xCE, 0x75, 0x00, 0x00, 0x10};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004010 0x38304747
    {
    const unsigned char cmd_data[] = {
        0x10, 0x40, 0x00, 0xCE, 0x47, 0x47, 0x30, 0x38};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004018 0x20601800
    {
    const unsigned char cmd_data[] = {
        0x18, 0x40, 0x00, 0xCE, 0x00, 0x18, 0x60, 0x20};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00401C 0x05010110
    {
    const unsigned char cmd_data[] = {
        0x1C, 0x40, 0x00, 0xCE, 0x10, 0x01, 0x01, 0x05};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004028 0x50505050
    {
    const unsigned char cmd_data[] = {
        0x28, 0x40, 0x00, 0xCE, 0x50, 0x50, 0x50, 0x50};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00402c 0x34393439
    {
    const unsigned char cmd_data[] = {
        0x2C, 0x40, 0x00, 0xCE, 0x39, 0x34, 0x39, 0x34};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004030 0x39000000
    {
    const unsigned char cmd_data[] = {
        0x30, 0x40, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x39};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0040C0 0x042082C2
    {
    const unsigned char cmd_data[] = {
        0xC0, 0x40, 0x00, 0xCE, 0xC2, 0x82, 0x20, 0x04};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0040C4 0x30023002
    {
    const unsigned char cmd_data[] = {
        0xC4, 0x40, 0x00, 0xCE, 0x02, 0x30, 0x02, 0x30};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004100 0x2D2D2D2D
    {
    const unsigned char cmd_data[] = {
        0x00, 0x41, 0x00, 0xCE, 0x2D, 0x2D, 0x2D, 0x2D};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004104 0x2D2D2D2D
    {
    const unsigned char cmd_data[] = {
        0x04, 0x41, 0x00, 0xCE, 0x2D, 0x2D, 0x2D, 0x2D};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004108 0x23232323
    {
    const unsigned char cmd_data[] = {
        0x08, 0x41, 0x00, 0xCE, 0x23, 0x23, 0x23, 0x23};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00410C 0x23232323
    {
    const unsigned char cmd_data[] = {
        0x0C, 0x41, 0x00, 0xCE, 0x23, 0x23, 0x23, 0x23};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004110 0xC0C0C0C0
    {
    const unsigned char cmd_data[] = {
        0x10, 0x41, 0x00, 0xCE, 0xC0, 0xC0, 0xC0, 0xC0};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004114 0xC0C0C0C0
    {
    const unsigned char cmd_data[] = {
        0x14, 0x41, 0x00, 0xCE, 0xC0, 0xC0, 0xC0, 0xC0};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004118 0xC0C0C0C0
    {
    const unsigned char cmd_data[] = {
        0x18, 0x41, 0x00, 0xCE, 0xC0, 0xC0, 0xC0, 0xC0};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00411C 0xC0C0C0C0
    {
    const unsigned char cmd_data[] = {
        0x1C, 0x41, 0x00, 0xCE, 0xC0, 0xC0, 0xC0, 0xC0};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004120 0x2D2D2D2D
    {
    const unsigned char cmd_data[] = {
        0x20, 0x41, 0x00, 0xCE, 0x2D, 0x2D, 0x2D, 0x2D};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004124 0x2D2D2D2D
    {
    const unsigned char cmd_data[] = {
        0x24, 0x41, 0x00, 0xCE, 0x2D, 0x2D, 0x2D, 0x2D};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004128 0x23232323
    {
    const unsigned char cmd_data[] = {
        0x28, 0x41, 0x00, 0xCE, 0x23, 0x23, 0x23, 0x23};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00412C 0x23232323
    {
    const unsigned char cmd_data[] = {
        0x2C, 0x41, 0x00, 0xCE, 0x23, 0x23, 0x23, 0x23};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004164 0x009C007E
    {
    const unsigned char cmd_data[] = {
        0x64, 0x41, 0x00, 0xCE, 0x7E, 0x00, 0x9C, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004180 0x00044423
    {
    const unsigned char cmd_data[] = {
        0x80, 0x41, 0x00, 0xCE, 0x23, 0x44, 0x04, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004184 0x98000014
    {
    const unsigned char cmd_data[] = {
        0x84, 0x41, 0x00, 0xCE, 0x14, 0x00, 0x00, 0x98};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE004188 0x92000000
    {
    const unsigned char cmd_data[] = {
        0x88, 0x41, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x92};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00419C 0x01001003
    {
    const unsigned char cmd_data[] = {
        0x9C, 0x41, 0x00, 0xCE, 0x03, 0x10, 0x00, 0x01};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0043FC 0x00000021
    {
    const unsigned char cmd_data[] = {
        0xFC, 0x43, 0x00, 0xCE, 0x21, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE002008 0x20500050
    {
    const unsigned char cmd_data[] = {
        0x08, 0x20, 0x00, 0xCE, 0x50, 0x00, 0x50, 0x20};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE002014 0x20304015
    {
    const unsigned char cmd_data[] = {
        0x14, 0x20, 0x00, 0xCE, 0x15, 0x40, 0x30, 0x20};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE00201C 0x02333567
    {
    const unsigned char cmd_data[] = {
        0x1C, 0x20, 0x00, 0xCE, 0x67, 0x35, 0x33, 0x02};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE002030 0x04061787
    {
    const unsigned char cmd_data[] = {
        0x30, 0x20, 0x00, 0xCE, 0x87, 0x17, 0x06, 0x04};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE002084 0x1F300F6F
    {
    const unsigned char cmd_data[] = {
        0x84, 0x20, 0x00, 0xCE, 0x6F, 0x0F, 0x30, 0x1F};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0020A0 0xA0000000
    {
    const unsigned char cmd_data[] = {
        0xA0, 0x20, 0x00, 0xCE, 0x00, 0x00, 0x00, 0xA0};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0020A4 0x00000808
    {
    const unsigned char cmd_data[] = {
        0xA4, 0x20, 0x00, 0xCE, 0x08, 0x08, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0020A8 0x40640000
    {
    const unsigned char cmd_data[] = {
        0xA8, 0x20, 0x00, 0xCE, 0x00, 0x00, 0x64, 0x40};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE0023FC 0x00000001
    {
    const unsigned char cmd_data[] = {
        0xFC, 0x23, 0x00, 0xCE, 0x01, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    // soc reg w 0xCE000004 0x0000017F
    {
    const unsigned char cmd_data[] = {
        0x04, 0x00, 0x00, 0xCE, 0x7F, 0x01, 0x00, 0x00};
    _command_Cabrio(0x00000006, cmd_data, 8);
    }
    //                      
    //                  
    // soc apply
    // soc script disable                     
    //               
    // cal 7			  
    {
    const unsigned char cmd_data[] = {
        0x07, 0x00, 0x00, 0x00};
    _command_Cabrio(0x00000046, cmd_data, 4);
    }
    //                      